@page "/vm"
@using InntalerSchachfreunde.Entities
@using Microsoft.JSInterop
@inject IJSRuntime JS
@inject ITournamentService tournamentService
@inject NavigationManager NavigationManager

<h3>@currentTournamentName</h3>

@if (crossTable is not null)
{
    <Table Bordered Narrow="true" FullWidth="false" Resizable="true" Responsive="true" Width="Width.Auto" Id ="printableTable">
        <TableHeader >
            <TableRow>
                <TableHeaderCell> </TableHeaderCell>
                @foreach(var head in crossTable.Header)
                {
                    <TableHeaderCell Class="vertical-header">@head</TableHeaderCell>
                }
            </TableRow>
        </TableHeader>
        <TableBody>
            @foreach(var row in crossTable.Rows)
            {                
                <TableRow>
                    @foreach (var cell in row)
                    {
                        <TableRowCell>@cell</TableRowCell>
                    }
                </TableRow>
            }
        </TableBody>
    </Table>
    <Button Color="Color.Primary" onclick="@PrintTable">Drucken</Button>
}
else
{
    <p>No tournament found.</p>
}
<style>
    .vertical-header {
        writing-mode: vertical-rl;
        transform: rotate(180deg);
    }</style>

@code {
    private List<Player> players;
    private CrossTable? crossTable;
    private string? currentTournamentName;

    protected override async Task OnInitializedAsync()
    {
        currentTournamentName = await tournamentService.GetCurrentTournamentName();
        crossTable = await tournamentService.GetCrossTableOfTournament(currentTournamentName);
    }
    private async Task PrintTable()
    {
        NavigationManager.NavigateTo("/printvm");
        //await JS.InvokeAsync<object>("open", new object[] { "/printvm", " blank" });
    }
}
